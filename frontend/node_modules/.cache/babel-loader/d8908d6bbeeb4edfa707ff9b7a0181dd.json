{"ast":null,"code":"var _jsxFileName = \"/home/festrella/Documents/web/course-scheduling/frontend/src/AcademicInfo.js\";\nimport React, { Component, useEffect, useState } from \"react\"; //import './App.css';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport TeacherForms from \"./components/TeacherForm\";\nimport CourseList from \"./components/CourseList\";\nimport { Col, Row, Container, Navbar, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport * as courseAction from \"./actions/courseAction\";\nimport DynamicForm from \"./components/DynamicForm\"; // function CourseLoader(props) {\n//   const [courses, setCourses] = useState([]);\n//   useEffect(() => {\n//     fetch(\"http://localhost:1337/courses\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setCourses(data);\n//         console.log(data);\n//       });\n//   }, []);\n// }\n// let courses = [];\n\nlet DataPage = ({\n  match,\n  location\n}) => {\n  let dataId = match.params.dataId;\n  return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" Match Props: \"), React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \" \", JSON.stringify(match, null, 2))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" Location Props: \"), React.createElement(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, JSON.stringify(location, null, 2))));\n};\n\nlet CoursePage = ({\n  match,\n  location\n}) => {\n  let courseId = match.params.courseId;\n  return React.createElement(React.Fragment, null);\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.DataPage = ({\n      match,\n      location\n    }) => {\n      let dataId = match.params.dataId;\n      return React.createElement(React.Fragment, null, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \" Match Props: \"), dataId, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \" \", JSON.stringify(match, null, 2))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \" Location Props: \"), React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, JSON.stringify(location, null, 2))), React.createElement(TeacherForms, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        name: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let course = {\n        name: this.state.name\n      };\n      this.setState({\n        name: \"\"\n      });\n\n      if (course.name == \"\") {\n        window.alert(\"Please enter a course name.\");\n      } else {\n        this.props.addCourse(course);\n      } // console.log(course);\n\n\n      this.props.submitCourseToBackend();\n    };\n\n    this.handleClick = (e, data) => {\n      e.preventDefault();\n      console.log(\"The link was clicked\");\n    };\n\n    this.listView = (data, index) => {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-10\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/data/\".concat(index + 1),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"text-left \",\n        variant: \"light\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, data.name)))), React.createElement(\"div\", {\n        className: \"col-md-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: e => {\n          if (window.confirm(\"Are you sure you want to delete this item?\")) this.deleteCourse(e, index, data);\n        },\n        className: \"btn btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Remove\")));\n    };\n\n    this.deleteCourse = (e, index, course) => {\n      console.log(course);\n      e.preventDefault();\n      this.props.deleteCourse(index);\n      this.props.deleteCourseOnBackend(course);\n    };\n\n    this.deleteAllCoursesOnBackend = e => {\n      e.preventDefault();\n      this.props.deleteAllCoursesOnBackend();\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.DataPage = this.DataPage.bind(this);\n    this.state = {\n      name: \"\"\n    };\n    this.courses = [];\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:1337/course\").then(response => response.json()).then(data => {\n      this.courses = data;\n      console.log(this.courses);\n    });\n  }\n\n  render() {\n    let name;\n    return React.createElement(\"div\", {\n      className: \"full-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \" Academic Requirements Form \"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"Add Course\", React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      className: \"form-control\",\n      value: this.state.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      value: \"ADD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: e => {\n        this.deleteAllCoursesOnBackend(e);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"DELETE ALL\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \"Click on the course name to edit it\", React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, this.courses.forEach(course => {\n      React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"course\");\n    }))))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/data/:dataId\",\n      component: this.DataPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/course/:courseId\",\n      component: CoursePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {// courses: state.courses,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addCourse: course => dispatch(courseAction.addCourse(course)),\n    deleteCourse: index => dispatch(courseAction.deleteCourse(index)),\n    submitCourseToBackend: () => dispatch(courseAction.submitCourseToBackend()),\n    deleteCourseOnBackend: index => dispatch(courseAction.deleteCourseOnBackend(index)),\n    deleteAllCoursesOnBackend: () => dispatch(courseAction.deleteAllCoursesOnBackend())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/festrella/Documents/web/course-scheduling/frontend/src/AcademicInfo.js"],"names":["React","Component","useEffect","useState","BrowserRouter","Router","Switch","Route","Link","TeacherForms","CourseList","Col","Row","Container","Navbar","Button","connect","courseAction","DynamicForm","DataPage","match","location","dataId","params","JSON","stringify","CoursePage","courseId","App","constructor","props","handleChange","e","setState","name","target","value","handleSubmit","preventDefault","course","state","window","alert","addCourse","submitCourseToBackend","handleClick","data","console","log","listView","index","confirm","deleteCourse","deleteCourseOnBackend","deleteAllCoursesOnBackend","bind","courses","componentDidMount","fetch","then","response","json","render","forEach","mapStateToProps","ownProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD,C,CACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,EAA8BC,MAA9B,EAAsCC,MAAtC,QAAoD,iBAApD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,YAAZ,MAA8B,wBAA9B;AACA,OAAOC,WAAP,MAAwB,0BAAxB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,IAAIC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA,MAE1BC,MAF0B,GAGlCF,KAHkC,CAEpCG,MAFoC,CAE1BD,MAF0B;AAItC,SACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQE,IAAI,CAACC,SAAL,CAAeL,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAR,CAHF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOI,IAAI,CAACC,SAAL,CAAeJ,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAAP,CAHF,CANF,CADF;AAcD,CAlBD;;AAoBA,IAAIK,UAAU,GAAG,CAAC;AAAEN,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAyB;AAAA,MAE5BM,QAF4B,GAGpCP,KAHoC,CAEtCG,MAFsC,CAE5BI,QAF4B;AAIxC,SACE,yCADF;AAcD,CAlBD;;AAoBA,MAAMC,GAAN,SAAkB3B,SAAlB,CAA4B;AAC1B4B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqBnBX,QArBmB,GAqBR,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAyB;AAAA,UAEtBC,MAFsB,GAG9BF,KAH8B,CAEhCG,MAFgC,CAEtBD,MAFsB;AAIlC,aACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEGA,MAFH,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQE,IAAI,CAACC,SAAL,CAAeL,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAR,CAHF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOI,IAAI,CAACC,SAAL,CAAeJ,QAAf,EAAyB,IAAzB,EAA+B,CAA/B,CAAP,CAHF,CANF,EAWE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,CADF;AAeD,KAxCkB;;AAAA,SA0CnBU,YA1CmB,GA0CHC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC;AADH,OAAd;AAGD,KA9CkB;;AAAA,SAgDnBC,YAhDmB,GAgDHL,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACM,cAAF;AACA,UAAIC,MAAM,GAAG;AACXL,QAAAA,IAAI,EAAE,KAAKM,KAAL,CAAWN;AADN,OAAb;AAGA,WAAKD,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;;AAGA,UAAIK,MAAM,CAACL,IAAP,IAAe,EAAnB,EAAuB;AACrBO,QAAAA,MAAM,CAACC,KAAP,CAAa,6BAAb;AACD,OAFD,MAEO;AACL,aAAKZ,KAAL,CAAWa,SAAX,CAAqBJ,MAArB;AACD,OAZmB,CAcpB;;;AACA,WAAKT,KAAL,CAAWc,qBAAX;AACD,KAhEkB;;AAAA,SAkEnBC,WAlEmB,GAkEL,CAACb,CAAD,EAAIc,IAAJ,KAAa;AACzBd,MAAAA,CAAC,CAACM,cAAF;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,KArEkB;;AAAA,SAuEnBC,QAvEmB,GAuER,CAACH,IAAD,EAAOI,KAAP,KAAiB;AAC1B,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,EAAE,kBAAWA,KAAK,GAAG,CAAnB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAC,OAAvC;AAA+C,QAAA,KAAK,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,IAAI,CAACZ,IADR,CADF,CADF,CADF,CADF,EAUE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAGF,CAAD,IAAO;AACd,cAAIS,MAAM,CAACU,OAAP,CAAe,4CAAf,CAAJ,EACE,KAAKC,YAAL,CAAkBpB,CAAlB,EAAqBkB,KAArB,EAA4BJ,IAA5B;AACH,SAJH;AAKE,QAAA,SAAS,EAAC,gBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAVF,CADF;AAwBD,KAhGkB;;AAAA,SAkGnBM,YAlGmB,GAkGJ,CAACpB,CAAD,EAAIkB,KAAJ,EAAWX,MAAX,KAAsB;AACnCQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACAP,MAAAA,CAAC,CAACM,cAAF;AACA,WAAKR,KAAL,CAAWsB,YAAX,CAAwBF,KAAxB;AACA,WAAKpB,KAAL,CAAWuB,qBAAX,CAAiCd,MAAjC;AACD,KAvGkB;;AAAA,SAyGnBe,yBAzGmB,GAyGUtB,CAAD,IAAO;AACjCA,MAAAA,CAAC,CAACM,cAAF;AACA,WAAKR,KAAL,CAAWwB,yBAAX;AACD,KA5GkB;;AAEjB,SAAKvB,YAAL,GAAoB,KAAKA,YAAL,CAAkBwB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKlB,YAAL,GAAoB,KAAKA,YAAL,CAAkBkB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKV,WAAL,GAAmB,KAAKA,WAAL,CAAiBU,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKpC,QAAL,GAAgB,KAAKA,QAAL,CAAcoC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKf,KAAL,GAAa;AACXN,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,SAAKsB,OAAL,GAAe,EAAf;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESb,IAAD,IAAU;AACd,WAAKU,OAAL,GAAeV,IAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKQ,OAAjB;AACD,KALH;AAMD;;AA2FDM,EAAAA,MAAM,GAAG;AACP,QAAI5B,IAAJ;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEE;AAAM,MAAA,QAAQ,EAAE,KAAKG,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAE,KAAKN,YAFjB;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,KAAK,EAAE,KAAKS,KAAL,CAAWN,IAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,KAAK,EAAC,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CAFF,EAgBE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAGF,CAAD,IAAO;AACd,aAAKsB,yBAAL,CAA+BtB,CAA/B;AACD,OAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBF,EAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CAHF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYG,KAAKwB,OAAL,CAAaO,OAAb,CAAsBxB,MAAD,IAAY;AAChC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,KAFA,CAZH,CAFF,CADF,CA5BF,CADF,EAmDE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,SAAS,EAAE,KAAKpB,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,mBAAZ;AAAgC,MAAA,SAAS,EAAEO,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CAnDF,CADF,CAJF,CADF;AAmED;;AApLyB;;AAuL5B,MAAMsC,eAAe,GAAG,CAACxB,KAAD,EAAQyB,QAAR,KAAqB;AAC3C,SAAO,CACL;AADK,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLxB,IAAAA,SAAS,EAAGJ,MAAD,IAAY4B,QAAQ,CAAClD,YAAY,CAAC0B,SAAb,CAAuBJ,MAAvB,CAAD,CAD1B;AAELa,IAAAA,YAAY,EAAGF,KAAD,IAAWiB,QAAQ,CAAClD,YAAY,CAACmC,YAAb,CAA0BF,KAA1B,CAAD,CAF5B;AAGLN,IAAAA,qBAAqB,EAAE,MAAMuB,QAAQ,CAAClD,YAAY,CAAC2B,qBAAb,EAAD,CAHhC;AAILS,IAAAA,qBAAqB,EAAGH,KAAD,IACrBiB,QAAQ,CAAClD,YAAY,CAACoC,qBAAb,CAAmCH,KAAnC,CAAD,CALL;AAMLI,IAAAA,yBAAyB,EAAE,MACzBa,QAAQ,CAAClD,YAAY,CAACqC,yBAAb,EAAD;AAPL,GAAP;AASD,CAVD;;AAYA,eAAetC,OAAO,CAACgD,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CtC,GAA7C,CAAf","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\n//import './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport TeacherForms from \"./components/TeacherForm\";\nimport CourseList from \"./components/CourseList\";\nimport { Col, Row, Container, Navbar, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport * as courseAction from \"./actions/courseAction\";\nimport DynamicForm from \"./components/DynamicForm\";\n\n// function CourseLoader(props) {\n//   const [courses, setCourses] = useState([]);\n\n//   useEffect(() => {\n//     fetch(\"http://localhost:1337/courses\")\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setCourses(data);\n//         console.log(data);\n//       });\n//   }, []);\n// }\n\n// let courses = [];\nlet DataPage = ({ match, location }) => {\n  let {\n    params: { dataId },\n  } = match;\n  return (\n    <>\n      <p>\n        <strong> Match Props: </strong>\n\n        <code> {JSON.stringify(match, null, 2)}</code>\n      </p>\n      <p>\n        <strong> Location Props: </strong>\n\n        <code>{JSON.stringify(location, null, 2)}</code>\n      </p>\n    </>\n  );\n};\n\nlet CoursePage = ({ match, location }) => {\n  let {\n    params: { courseId },\n  } = match;\n  return (\n    <>\n      {/* <p>\n        <strong> Match Props: </strong>\n        {courseId}\n        <code> {JSON.stringify(match, null, 2)}</code>\n      </p>\n      <p>\n        <strong> Location Props: </strong>\n        {courses[courseId - 1].name}\n        <code>{JSON.stringify(location, null, 2)}</code>\n      </p> */}\n    </>\n  );\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.DataPage = this.DataPage.bind(this);\n    this.state = {\n      name: \"\",\n    };\n    this.courses = [];\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:1337/course\")\n      .then((response) => response.json())\n      .then((data) => {\n        this.courses = data;\n        console.log(this.courses);\n      });\n  }\n\n  DataPage = ({ match, location }) => {\n    let {\n      params: { dataId },\n    } = match;\n    return (\n      <>\n        <p>\n          <strong> Match Props: </strong>\n          {dataId}\n          <code> {JSON.stringify(match, null, 2)}</code>\n        </p>\n        <p>\n          <strong> Location Props: </strong>\n\n          <code>{JSON.stringify(location, null, 2)}</code>\n        </p>\n        <TeacherForms />\n      </>\n    );\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      name: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let course = {\n      name: this.state.name,\n    };\n    this.setState({\n      name: \"\",\n    });\n    if (course.name == \"\") {\n      window.alert(\"Please enter a course name.\");\n    } else {\n      this.props.addCourse(course);\n    }\n\n    // console.log(course);\n    this.props.submitCourseToBackend();\n  };\n\n  handleClick = (e, data) => {\n    e.preventDefault();\n    console.log(\"The link was clicked\");\n  };\n\n  listView = (data, index) => {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-10\">\n          <h5 key={index}>\n            <Link to={`/data/${index + 1}`}>\n              <Button className=\"text-left \" variant=\"light\" block>\n                {data.name}\n              </Button>\n            </Link>\n          </h5>\n        </div>\n        <div className=\"col-md-2\">\n          <Button\n            onClick={(e) => {\n              if (window.confirm(\"Are you sure you want to delete this item?\"))\n                this.deleteCourse(e, index, data);\n            }}\n            className=\"btn btn-danger\"\n          >\n            Remove\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  deleteCourse = (e, index, course) => {\n    console.log(course);\n    e.preventDefault();\n    this.props.deleteCourse(index);\n    this.props.deleteCourseOnBackend(course);\n  };\n\n  deleteAllCoursesOnBackend = (e) => {\n    e.preventDefault();\n    this.props.deleteAllCoursesOnBackend();\n  };\n\n  render() {\n    let name;\n    return (\n      <div className=\"full-page\">\n        {/* <Navbar bg=\"dark\" variant=\"dark\">\n          <Navbar.Brand href=\"#home\">Brandeis Course Scheduling</Navbar.Brand>\n        </Navbar> */}\n        <Router>\n          <Row>\n            <Col>\n              <h1> Academic Requirements Form </h1>\n              <hr />\n              <div>\n                Add Course\n                <form onSubmit={this.handleSubmit}>\n                  <input\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    className=\"form-control\"\n                    value={this.state.name}\n                  />\n                  <br />\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-success\"\n                    value=\"ADD\"\n                  />\n                </form>\n                <Button\n                  onClick={(e) => {\n                    this.deleteAllCoursesOnBackend(e);\n                  }}\n                >\n                  DELETE ALL\n                </Button>\n                <hr />\n              </div>\n              <div>\n                <nav>\n                  Click on the course name to edit it\n                  <ul>\n                    {/* {courses.map((course, index) => (\n                    <h5 key={index}>\n                      <li><Link to={`/course/${index + 1}`}>{course.name}'s Form</Link></li> \n                    </h5>\n                    ))\n                  } */}\n\n                    {/* {this.props.courses.map((course, i) =>\n                      this.listView(course, i)\n                    )} */}\n\n                    {this.courses.forEach((course) => {\n                      <p>course</p>;\n                    })}\n                  </ul>\n                </nav>\n              </div>\n            </Col>\n            <Col>\n              <Switch>\n                <Route path=\"/data/:dataId\" component={this.DataPage} />\n                <Route path=\"/course/:courseId\" component={CoursePage} />\n              </Switch>\n            </Col>\n          </Row>\n        </Router>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    // courses: state.courses,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addCourse: (course) => dispatch(courseAction.addCourse(course)),\n    deleteCourse: (index) => dispatch(courseAction.deleteCourse(index)),\n    submitCourseToBackend: () => dispatch(courseAction.submitCourseToBackend()),\n    deleteCourseOnBackend: (index) =>\n      dispatch(courseAction.deleteCourseOnBackend(index)),\n    deleteAllCoursesOnBackend: () =>\n      dispatch(courseAction.deleteAllCoursesOnBackend()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}