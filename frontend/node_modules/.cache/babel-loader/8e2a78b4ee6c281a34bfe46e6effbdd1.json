{"ast":null,"code":"import _slicedToArray from \"/home/festrella/Documents/web/course-scheduling/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/festrella/Documents/web/course-scheduling/frontend/src/TeacherUploader.js\";\nimport React from 'react'; // import './Admin.css';\n\nimport Navigation from './Navigation.js';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n/**\n * TeacherUploader page to view and send responese\n * @param {*} props \n */\n\nfunction TeacherUploader(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        hasResponded = _useState6[0],\n        setResponseStatus = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        coursesAssigned = _useState8[0],\n        setCourses = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        blocksAvailable = _useState10[0],\n        setBlocksAvailable = _useState10[1];\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        blocksAssigned = _useState12[0],\n        setBlocksAssigned = _useState12[1];\n\n  const _useState13 = useState(''),\n        _useState14 = _slicedToArray(_useState13, 2),\n        requirements = _useState14[0],\n        setRequirements = _useState14[1];\n\n  const _useState15 = useState([]),\n        _useState16 = _slicedToArray(_useState15, 2),\n        professors = _useState16[0],\n        setProfessors = _useState16[1];\n\n  useEffect(() => {\n    fetch('http://localhost:1337/professor').then(response => response.json()).then(data => {\n      setProfessors(data);\n    });\n  }, []);\n\n  const handleSubmit = event => {\n    alert('Professor ' + name + ' was submitted');\n    fetch('http://localhost:1337/professor', {\n      method: 'POST',\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        name: name,\n        email: email,\n        hasResponded: hasResponded\n      })\n    }).then(function (response) {// return response.json();\n    }).then(fetch('http://localhost:1337/professor').then(response => response.json()).then(data => {\n      setProfessors(data);\n      console.log(data);\n    }));\n    event.preventDefault();\n  };\n\n  const handleDelete = (event, id) => {\n    fetch('http://localhost:1337/professor/' + id, {\n      method: 'DELETE'\n    }).then(fetch('http://localhost:1337/professor').then(response => response.json()).then(data => {\n      setProfessors(data);\n      console.log(data);\n    })).then(alert('Professor ' + id + ' was deleted')); //event.preventDefault();\n  };\n\n  function handleClick(props) {\n    console.log(props);\n  }\n\n  return React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"col-lg-5 col-md-6 col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"New Professor Input Form:\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), \"Name: \", React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    name: \"name\",\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), \"Email: \", React.createElement(\"input\", {\n    type: \"text\",\n    value: email,\n    name: \"email\",\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), \"Responded: (write only \\\"true\\\" or \\\"false\\\", without quotes):\", React.createElement(\"input\", {\n    type: \"text\",\n    value: hasResponded,\n    name: \"response\",\n    onChange: e => setResponseStatus(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), \"Courses Assigned (separated by semicolons, only one space in each course name between the department name and the course code e.g.: \\\"COSI 011A\\\", uppercase letters only): \", React.createElement(\"input\", {\n    type: \"text\",\n    value: coursesAssigned,\n    name: \"coursesAssigned\",\n    onChange: e => setCourses(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), \"Blocks Available (separated by semicolons, no spaces, uppercase letters only): \", React.createElement(\"input\", {\n    type: \"text\",\n    value: blocksAvailable,\n    onChange: e => setBlocksAvailable(e.target.value),\n    name: \"blocksAvailable\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), \"Assigned Blocks: \", React.createElement(\"input\", {\n    type: \"text\",\n    value: blocksAssigned,\n    name: \"assignedBlocks\",\n    onChange: e => setBlocksAssigned(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), \"Requirements: \", React.createElement(\"input\", {\n    type: \"text\",\n    value: requirements,\n    name: \"requirements\",\n    onChange: e => setRequirements(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit New Professor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    class: \"col-lg-5 col-md-6 col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Current list of professors:\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), professors.map(professor => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Name: \", professor.name, \", Email: \", professor.email, \", ID: \", professor.id, \", Has Responded: \", professor.hasResponded, \" \", React.createElement(\"form\", {\n    onSubmit: event => handleDelete(event, professor.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \" \", React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Delete Professor \" + professor.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), \" \")))));\n} // class TeacherUploader extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     test = {};\n//     this.state = { name: '', email: '', professors: {}};\n//   }\n//   handleChange = (event) => {\n//     this.setState({[event.target.name]: event.target.value});\n//   }\n//   handleSubmit = (event) => {\n//     alert('Professor ' + this.state.name + ' was submitted');\n//     fetch('http://localhost:1337/professor', {\n//         method: 'POST',\n//         // We convert the React state to JSON and send it as the POST body\n//         body: JSON.stringify(this.state)\n//       }).then(function(response) {\n//         console.log(response)\n//         return response.json();\n//       });\n//     fetch('http://localhost:1337/professor', {\n//         method: 'GET'\n//       }).then(function(response) {\n//         console.log(\"aaaa\")\n//         console.log(response)\n//         test = response.json();\n//         // this.setState({professors: response.json()})\n//         return null;\n//       });\n//     event.preventDefault();\n// }\n//   render() {\n//     return (\n//       <div className=\"app\">\n//         <div class=\"row\">\n//           <div class=\"col-lg-2 col-md-0 col-sm-0 menu-bar align-items-end\">\n//             <Navigation />\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n//             <form onSubmit={this.handleSubmit}>\n//               <label>\n//                 Name: <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//                 Email: <input type=\"text\" value={this.state.value} name=\"email\" onChange={this.handleChange} /> <br></br>\n//                 Courses Assigned (separated by semicolons, only one space in each course name between the department name and the course code e.g.: \"COSI 011A\", uppercase letters only): <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//                 Blocks Available (separated by semicolons, no spaces, uppercase letters only): <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//                 Assigned Blocks: <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//               </label>\n//               <input type=\"submit\" value=\"Submit\" />\n//             </form>\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n//             Current list of teachers goes here\n//             <br></br>\n//             {/* {test.map(element => <div>{element}</div>)} */}\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// const TeacherUploader = () => {\n//     return (\n//       <div className=\"app\">\n//         <div class=\"row\">\n//           <div class=\"col-lg-2 col-md-0 col-sm-0 menu-bar align-items-end\">\n//             <Navigation />\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n//             <form onSubmit={this.handleSubmit}>\n//               <label>\n//                 Name: <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} />\n//               </label>\n//               <input type=\"submit\" value=\"Submit\" />\n//             </form>\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n\nexport default TeacherUploader;","map":{"version":3,"sources":["/home/festrella/Documents/web/course-scheduling/frontend/src/TeacherUploader.js"],"names":["React","Navigation","useState","useEffect","Link","TeacherUploader","props","name","setName","email","setEmail","hasResponded","setResponseStatus","coursesAssigned","setCourses","blocksAvailable","setBlocksAvailable","blocksAssigned","setBlocksAssigned","requirements","setRequirements","professors","setProfessors","fetch","then","response","json","data","handleSubmit","event","alert","method","body","JSON","stringify","console","log","preventDefault","handleDelete","id","handleClick","e","target","value","map","professor"],"mappings":"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","sourcesContent":["import React from 'react';\n// import './Admin.css';\nimport Navigation from './Navigation.js';\nimport { useState, useEffect } from 'react';\n\nimport { Link } from 'react-router-dom';\n\n/**\n * TeacherUploader page to view and send responese\n * @param {*} props \n */\nfunction TeacherUploader(props)  {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [hasResponded, setResponseStatus] = useState('')\n  const [coursesAssigned, setCourses] = useState('')\n  const [blocksAvailable, setBlocksAvailable] = useState('')\n  const [blocksAssigned, setBlocksAssigned] = useState('')\n  const [requirements, setRequirements] = useState('')\n  const [professors, setProfessors] = useState([])\n\n  useEffect(() => {\n    fetch('http://localhost:1337/professor'\n    ).then(response=>response.json()\n    ).then(data=>{ \n      setProfessors(data)\n    });\n  }, [])\n\n  const handleSubmit = (event) => {\n    alert('Professor ' + name + ' was submitted');\n\n    fetch('http://localhost:1337/professor', {\n        method: 'POST',\n        // We convert the React state to JSON and send it as the POST body\n        body: JSON.stringify({name: name, email: email, hasResponded: hasResponded})\n      }).then(function(response) {\n        // return response.json();\n      }).then(fetch('http://localhost:1337/professor'\n      ).then(response=>response.json()\n      ).then(data=>{ \n        setProfessors(data)\n        console.log(data)\n      }\n      ));\n\n    event.preventDefault();\n  }\n\n  const handleDelete = (event, id) => {\n\n    fetch('http://localhost:1337/professor/' + id, {\n        method: 'DELETE',\n      }).then(fetch('http://localhost:1337/professor'\n      ).then(response=>response.json()\n      ).then(data=>{ \n        setProfessors(data)\n        console.log(data)\n      }\n      )).then(alert('Professor ' + id + ' was deleted'));\n\n    //event.preventDefault();\n  }\n\n  function handleClick(props) {\n    console.log(props);\n  }\n\n  return (\n    <span>\n      <div class=\"col-lg-5 col-md-6 col-sm-6\">\n        <form onSubmit={handleSubmit}>\n          <label>\n            <center>New Professor Input Form:</center><br />  \n            Name: <input type=\"text\" value={name} name=\"name\" onChange={e => setName(e.target.value)} /> <br />\n            Email: <input type=\"text\" value={email} name=\"email\" onChange={e => setEmail(e.target.value)} /> <br />\n            Responded: (write only \"true\" or \"false\", without quotes):<input type=\"text\" value={hasResponded} name=\"response\" onChange={e => setResponseStatus(e.target.value)} /> <br></br>\n            Courses Assigned (separated by semicolons, only one space in each course name between the department name and the course code e.g.: \"COSI 011A\", uppercase letters only): <input type=\"text\" value={coursesAssigned} name=\"coursesAssigned\" onChange={e => setCourses(e.target.value)} /> <br />\n            Blocks Available (separated by semicolons, no spaces, uppercase letters only): <input type=\"text\" value={blocksAvailable} onChange={e => setBlocksAvailable(e.target.value)} name=\"blocksAvailable\" /> <br />\n            Assigned Blocks: <input type=\"text\" value={blocksAssigned}  name=\"assignedBlocks\" onChange={e => setBlocksAssigned(e.target.value)} /> <br /> \n            Requirements: <input type=\"text\" value={requirements}  name=\"requirements\" onChange={e => setRequirements(e.target.value)} /> <br /> \n          </label>\n          <input type=\"submit\" value=\"Submit New Professor\" />\n        </form>\n      </div>\n      <div class=\"col-lg-5 col-md-6 col-sm-6\">\n        <center>Current list of professors:</center>\n        <br></br>\n        {professors.map(professor => <div>Name: {professor.name}, Email: {professor.email}, ID: {professor.id}, Has Responded: {professor.hasResponded} <form onSubmit={(event) => handleDelete(event, professor.id)} > <input type=\"submit\" value={\"Delete Professor \" + professor.name} /> </form></div>)}\n      </div>\n    </span>\n  )\n}\n// class TeacherUploader extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     test = {};\n//     this.state = { name: '', email: '', professors: {}};\n//   }\n\n//   handleChange = (event) => {\n//     this.setState({[event.target.name]: event.target.value});\n//   }\n\n//   handleSubmit = (event) => {\n//     alert('Professor ' + this.state.name + ' was submitted');\n\n//     fetch('http://localhost:1337/professor', {\n//         method: 'POST',\n//         // We convert the React state to JSON and send it as the POST body\n//         body: JSON.stringify(this.state)\n//       }).then(function(response) {\n//         console.log(response)\n//         return response.json();\n//       });\n\n//     fetch('http://localhost:1337/professor', {\n//         method: 'GET'\n//       }).then(function(response) {\n//         console.log(\"aaaa\")\n//         console.log(response)\n//         test = response.json();\n//         // this.setState({professors: response.json()})\n//         return null;\n//       });\n\n//     event.preventDefault();\n// }\n\n//   render() {\n//     return (\n//       <div className=\"app\">\n//         <div class=\"row\">\n//           <div class=\"col-lg-2 col-md-0 col-sm-0 menu-bar align-items-end\">\n//             <Navigation />\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n//             <form onSubmit={this.handleSubmit}>\n//               <label>\n//                 Name: <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//                 Email: <input type=\"text\" value={this.state.value} name=\"email\" onChange={this.handleChange} /> <br></br>\n//                 Courses Assigned (separated by semicolons, only one space in each course name between the department name and the course code e.g.: \"COSI 011A\", uppercase letters only): <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//                 Blocks Available (separated by semicolons, no spaces, uppercase letters only): <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//                 Assigned Blocks: <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//               </label>\n//               <input type=\"submit\" value=\"Submit\" />\n//             </form>\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n//             Current list of teachers goes here\n//             <br></br>\n//             {/* {test.map(element => <div>{element}</div>)} */}\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// const TeacherUploader = () => {\n//     return (\n//       <div className=\"app\">\n//         <div class=\"row\">\n//           <div class=\"col-lg-2 col-md-0 col-sm-0 menu-bar align-items-end\">\n//             <Navigation />\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n//             <form onSubmit={this.handleSubmit}>\n//               <label>\n//                 Name: <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} />\n//               </label>\n//               <input type=\"submit\" value=\"Submit\" />\n//             </form>\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n            \n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\nexport default TeacherUploader;"]},"metadata":{},"sourceType":"module"}