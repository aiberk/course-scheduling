{"ast":null,"code":"import _defineProperty from \"/home/festrella/Documents/web/course-scheduling/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/festrella/Documents/web/course-scheduling/frontend/src/pref-form/PrefForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport './PrefForm.css';\nimport Select from './Select';\nimport TextArea from './TextArea';\nimport EmptyForm from './EmptyForm';\nimport blocks from '../block-sched/blocks.js';\nimport { connect } from 'react-redux';\nimport { addPreference, deletePreference, deleteChosenCourse } from '../redux/actions';\n\nfunction AddPreferenceForm(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, Object.entries(props.chosen_courses).length === 0 && React.createElement(EmptyForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), Object.entries(props.chosen_courses).length !== 0 && React.createElement(PreferencesForm, {\n    blocks: props.chosen_courses,\n    value: props.value,\n    addPreference: props.addPreference,\n    deletePreference: props.deletePreference,\n    deleteChosenCourse: props.deleteChosenCourse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }));\n}\n\nclass PreferencesForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: {\n        preference: -1,\n        indication: \"\",\n        description: \"\"\n      },\n      preferenceOptions: [{\n        id: 0,\n        value: \"MUST (you can only teach in this block)\"\n      }, {\n        id: 1,\n        value: \"PREFERRED-1 (highly preferred)\"\n      }, {\n        id: 2,\n        value: \"PREFERRED-2 (preferred)\"\n      }, {\n        id: 3,\n        value: \"PREFERRED-3 (slightly preferred)\"\n      }, {\n        id: 4,\n        value: \"NO (you CANNOT teach in this block)\"\n      }],\n      courseOptions: [{\n        id: \"GENERAL\",\n        value: \"GENERAL (for more than 1 course)\"\n      }, {\n        id: \"193COSI-10A-2\",\n        value: \"193COSI-10A-2 : Introduction to Problem Solving in Python\"\n      }, {\n        id: \"193COSI-21A-1\",\n        value: \"193COSI-21A-1 : Data Structures and the Fundamentals of Computing\"\n      }, {\n        id: \"193COSI-101A-1\",\n        value: \"193COSI-101A-1 : Fundamentals of Artificial Intelligence\"\n      }]\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(e) {\n    const name = e.target.name;\n    const val = e.target.value;\n    this.setState(prevState => ({\n      value: _objectSpread({}, prevState.value, {\n        [name]: val\n      })\n    }));\n  }\n\n  findInfo(id) {\n    return blocks.filter(block => block.id === id)[0];\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let toSubmit = this.state.value;\n    Object.entries(this.props.blocks).map(arr => arr[1]).map(value => {\n      toSubmit['block'] = this.findInfo(value.id);\n      console.log(toSubmit);\n      return this.props.addPreference(toSubmit);\n    });\n    this.clearAll();\n    Object.entries(this.props.blocks).map(arr => arr[1]).forEach(val => this.props.deleteChosenCourse(val.id));\n  }\n\n  clearAll() {\n    this.setState(prevState => ({\n      value: {\n        preference: -1,\n        indication: \"\",\n        description: \"\"\n      }\n    }));\n  }\n\n  deleteBlocks() {\n    Object.entries(this.props.blocks).map(arr => arr[1]).forEach(obj => this.props.deletePreference(obj.id));\n  }\n\n  deleteChosenBlocks() {\n    Object.entries(this.props.blocks).map(arr => arr[1]).forEach(val => this.props.deleteChosenCourse(val.id));\n  }\n\n  getName() {\n    const names = Object.entries(this.props.blocks).map(arr => arr[1]);\n    let namesStr = \"\";\n\n    for (let i = 0; i < names.length; i++) {\n      namesStr += names[i].name;\n\n      if (i < names.length - 1) {\n        namesStr += \", \";\n      }\n    }\n\n    return namesStr;\n  }\n\n  renderForm() {\n    return React.createElement(\"form\", {\n      className: \"text-center border border-primary p-3\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"form_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"BLOCK PICKED: \", this.getName(), \" \"), React.createElement(Select, {\n      title: \"Preference\",\n      name: \"preference\",\n      options: this.state.preferenceOptions,\n      value: this.state.value.preference,\n      placeholder: \"\",\n      handleChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Select, {\n      title: \"Course indicated\",\n      name: \"indication\",\n      options: this.state.courseOptions,\n      value: this.state.value.indication,\n      placeholder: \"\",\n      handleChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      title: \"Comments (optional)\",\n      value: this.state.value.description,\n      name: \"description\",\n      handleChange: this.handleInput,\n      placeholder: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"btn btn-primary btn_form\",\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary btn_form\",\n      onClick: () => this.clearAll(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Clear\"));\n  }\n\n  renderSubmitted() {\n    const block_value = Object.entries(this.props.value).filter(val => val[0] in this.props.blocks && val[0] === this.props.blocks[val[0]].id)[0][1];\n    return React.createElement(\"div\", {\n      className: \"submitted text-center border border-primary p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"form_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"BLOCK PICKED: \", this.getName(), \" \"), React.createElement(\"div\", {\n      className: \"content_submitted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Professor: \", \"aaa\"), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Preference: \", this.state.preferenceOptions.filter(val => val.id + \"\" === block_value.preference)[0].value.split(\" \", 2)[0]), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Indication: \", block_value.indication), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Description: \", block_value.description)), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary btn_form\",\n      onClick: () => this.deleteBlocks(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Delete\"));\n  }\n\n  exists() {\n    return Object.keys(this.props.blocks).some(id => id in this.props.value);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main_pref\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, !this.exists() && this.renderForm(), this.exists() && this.renderSubmitted());\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  chosen_courses: state.chosen_courses,\n  value: state.value\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addPreference: pref => {\n      dispatch(addPreference(pref));\n    },\n    deletePreference: id => {\n      dispatch(deletePreference(id));\n    },\n    deleteChosenCourse: id => {\n      dispatch(deleteChosenCourse(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPreferenceForm);","map":{"version":3,"sources":["/home/festrella/Documents/web/course-scheduling/frontend/src/pref-form/PrefForm.js"],"names":["React","Select","TextArea","EmptyForm","blocks","connect","addPreference","deletePreference","deleteChosenCourse","AddPreferenceForm","props","Object","entries","chosen_courses","length","value","PreferencesForm","Component","constructor","state","preference","indication","description","preferenceOptions","id","courseOptions","handleInput","bind","handleSubmit","e","name","target","val","setState","prevState","findInfo","filter","block","preventDefault","toSubmit","map","arr","console","log","clearAll","forEach","deleteBlocks","obj","deleteChosenBlocks","getName","names","namesStr","i","renderForm","renderSubmitted","block_value","split","exists","keys","some","render","mapStateToProps","mapDispatchToProps","dispatch","pref"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './PrefForm.css';\nimport Select from './Select';\nimport TextArea from './TextArea';\nimport EmptyForm from './EmptyForm';\n\nimport blocks from '../block-sched/blocks.js';\n\nimport { connect } from 'react-redux';\nimport { addPreference, deletePreference, deleteChosenCourse } from '../redux/actions'\n\nfunction AddPreferenceForm(props) {\n  return (\n    <div>\n      {Object.entries(props.chosen_courses).length === 0 && <EmptyForm />}\n      {Object.entries(props.chosen_courses).length !== 0 && <PreferencesForm blocks={props.chosen_courses}\n        value={props.value}\n        addPreference={props.addPreference}\n        deletePreference={props.deletePreference} \n        deleteChosenCourse={props.deleteChosenCourse}/>}\n    </div>\n  );\n}\n\nclass PreferencesForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: {\n        preference: -1,\n        indication: \"\",\n        description: \"\"\n      },\n      preferenceOptions: [\n        { id: 0, value: \"MUST (you can only teach in this block)\" },\n        { id: 1, value: \"PREFERRED-1 (highly preferred)\" },\n        { id: 2, value: \"PREFERRED-2 (preferred)\" },\n        { id: 3, value: \"PREFERRED-3 (slightly preferred)\" },\n        { id: 4, value: \"NO (you CANNOT teach in this block)\" },\n      ],\n      courseOptions: [\n        { id: \"GENERAL\", value: \"GENERAL (for more than 1 course)\" },\n        { id: \"193COSI-10A-2\", value: \"193COSI-10A-2 : Introduction to Problem Solving in Python\" },\n        { id: \"193COSI-21A-1\", value: \"193COSI-21A-1 : Data Structures and the Fundamentals of Computing\" },\n        { id: \"193COSI-101A-1\", value: \"193COSI-101A-1 : Fundamentals of Artificial Intelligence\" }\n      ]\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleInput(e) {\n    const name = e.target.name;\n    const val = e.target.value;\n    this.setState(prevState => ({\n      value: {\n        ...prevState.value,\n        [name]: val\n      }\n    }),\n    );\n  }\n\n  findInfo(id) {\n    return blocks.filter(block => block.id === id)[0];\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    let toSubmit = this.state.value;\n    Object.entries(this.props.blocks).map(arr => arr[1]).map(value => {\n      toSubmit['block'] = this.findInfo(value.id);\n      console.log(toSubmit);\n      return this.props.addPreference(toSubmit);\n    });\n    this.clearAll();\n    Object.entries(this.props.blocks).map(arr => arr[1]).forEach(val => this.props.deleteChosenCourse(val.id));\n  }\n\n  clearAll() {\n    this.setState(prevState => ({\n      value: {\n        preference: -1,\n        indication: \"\",\n        description: \"\"\n      }\n    }),\n    );\n  }\n\n  deleteBlocks() {\n    Object.entries(this.props.blocks).map(arr => arr[1]).forEach(obj => this.props.deletePreference(obj.id));\n  }\n\n  deleteChosenBlocks() {\n    Object.entries(this.props.blocks).map(arr => arr[1]).forEach(val => this.props.deleteChosenCourse(val.id));\n  }\n\n  getName() {\n    const names = Object.entries(this.props.blocks).map(arr => arr[1]);\n    let namesStr = \"\";\n    for (let i = 0; i < names.length; i++) {\n      namesStr += names[i].name;\n      if (i < names.length - 1) {\n        namesStr += \", \";\n      }\n    }\n    return namesStr;\n  }\n\n  renderForm() {\n    return (\n      <form className=\"text-center border border-primary p-3\" onSubmit={this.handleSubmit}>\n        <h3 className=\"form_title\">BLOCK PICKED: {this.getName()} </h3>\n        <Select title={\"Preference\"}\n          name={\"preference\"}\n          options={this.state.preferenceOptions}\n          value={this.state.value.preference}\n          placeholder={\"\"}\n          handleChange={this.handleInput} />\n\n        <Select title={\"Course indicated\"}\n          name={\"indication\"}\n          options={this.state.courseOptions}\n          value={this.state.value.indication}\n          placeholder={\"\"}\n          handleChange={this.handleInput} />\n\n        <TextArea\n          title={\"Comments (optional)\"}\n          value={this.state.value.description}\n          name={\"description\"}\n          handleChange={this.handleInput}\n          placeholder={\"\"} />\n\n        <input className=\"btn btn-primary btn_form\" type=\"submit\" value=\"Submit\" />\n        <button type=\"button\" className=\"btn btn-secondary btn_form\" onClick={() => this.clearAll()}>Clear</button>\n      </form>\n    );\n  }\n\n  renderSubmitted() {\n    const block_value = Object.entries(this.props.value).filter(val => val[0] in this.props.blocks && val[0] === this.props.blocks[val[0]].id)[0][1];\n    return (\n      <div className=\"submitted text-center border border-primary p-3\">\n        <h3 className=\"form_title\">BLOCK PICKED: {this.getName()} </h3>\n\n        <div className=\"content_submitted\">\n          <h5>Professor: {\"aaa\"}</h5>\n          <h5>Preference: {this.state.preferenceOptions.filter(val => val.id + \"\" === block_value.preference)[0].value.split(\" \", 2)[0]}</h5>\n          <h5>Indication: {block_value.indication}</h5>\n          <h5>Description: {block_value.description}</h5>\n        </div>\n        <button type=\"button\" className=\"btn btn-secondary btn_form\" onClick={() => this.deleteBlocks()}>Delete</button>\n      </div>\n    );\n  }\n\n  exists() {\n    return Object.keys(this.props.blocks).some(id => id in this.props.value);\n  }\n\n  render() {\n    return (\n      <div className=\"main_pref\">\n        {!this.exists() && this.renderForm()}\n        {this.exists() && this.renderSubmitted()}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  chosen_courses: state.chosen_courses,\n  value: state.value,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPreference: (pref) => { dispatch(addPreference(pref)) },\n    deletePreference: (id) => { dispatch(deletePreference(id)) },\n    deleteChosenCourse: (id) => { dispatch(deleteChosenCourse(id)) },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPreferenceForm);"]},"metadata":{},"sourceType":"module"}