{"ast":null,"code":"import _slicedToArray from \"/home/festrella/Documents/web/course-scheduling/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/festrella/Documents/web/course-scheduling/frontend/src/TeacherUploader.js\";\nimport React from 'react'; // import './Admin.css';\n\nimport Navigation from './Navigation.js';\nimport { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n/**\n * TeacherUploader page to view and send responese\n */\n\nfunction TeacherUploader() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        email = _useState4[0],\n        setEmail = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        professors = _useState6[0],\n        setProfessors = _useState6[1];\n\n  useEffect(() => {\n    fetch('http://localhost:1337/professor').then(response => response.json()).then(data => {\n      setProfessors(data);\n    });\n  });\n\n  const handleSubmit = event => {\n    alert('Professor ' + name + ' was submitted');\n    fetch('http://localhost:1337/professor', {\n      method: 'POST',\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify({\n        name: name,\n        email: email\n      })\n    }).then(function (response) {// return response.json();\n    });\n    fetch('http://localhost:1337/professor').then(response => response.json()).then(data => {\n      setProfessors(data);\n      console.log(data);\n    });\n    event.preventDefault();\n  };\n\n  function SideButton(props) {\n    function handleClick(props) {\n      console.log(\"aaa\");\n      document.querySelectorAll('.sidebar-button').forEach(button => {\n        button.classList.remove('button-clicked');\n      });\n      document.getElementById(props.name).classList.add('button-clicked');\n    }\n\n    return (//TODO link causes the buttons to not highlight\n      React.createElement(Link, {\n        to: props.link,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: props.name,\n        class: \"btn-light sidebar-button\",\n        onClick: () => handleClick(props),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, props.name))\n    );\n  }\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"col-lg-2 col-md-0 col-sm-0 menu-bar align-items-end\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(SideButton, {\n    name: \"Course Scheduling Platform\",\n    link: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), \" \", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })), React.createElement(SideButton, {\n    name: \"Academic Info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), \" \", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(SideButton, {\n    name: \"Teacher Info Uploading\",\n    link: \"/teacher-uploader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(SideButton, {\n    name: \"Teacher's Requirements\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), \" \", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(SideButton, {\n    name: \"Teacher Reminder\",\n    link: \"/teacher-reminder\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(SideButton, {\n    name: \"Manual Scheduling\",\n    link: \"/scheduling\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), \" \", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(SideButton, {\n    name: \"Automatic Scheduling\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), \" \", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(SideButton, {\n    name: \"About\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), \" \", React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    class: \"col-lg-5 col-md-6 col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Name: \", React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    name: \"name\",\n    onChange: e => setName(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), \"Email: \", React.createElement(\"input\", {\n    type: \"text\",\n    value: email,\n    name: \"email\",\n    onChange: e => setEmail(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), \"Courses Assigned (separated by semicolons, only one space in each course name between the department name and the course code e.g.: \\\"COSI 011A\\\", uppercase letters only): \", React.createElement(\"input\", {\n    type: \"text\",\n    value: '',\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), \"Blocks Available (separated by semicolons, no spaces, uppercase letters only): \", React.createElement(\"input\", {\n    type: \"text\",\n    value: '',\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), \"Assigned Blocks: \", React.createElement(\"input\", {\n    type: \"text\",\n    value: '',\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), \" \", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    class: \"col-lg-5 col-md-6 col-sm-6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Current list of teachers goes here\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), professors.map(professor => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Name: \", professor.name, \", Email: \", professor.email)))));\n} // class TeacherUploader extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     test = {};\n//     this.state = { name: '', email: '', professors: {}};\n//   }\n//   handleChange = (event) => {\n//     this.setState({[event.target.name]: event.target.value});\n//   }\n//   handleSubmit = (event) => {\n//     alert('Professor ' + this.state.name + ' was submitted');\n//     fetch('http://localhost:1337/professor', {\n//         method: 'POST',\n//         // We convert the React state to JSON and send it as the POST body\n//         body: JSON.stringify(this.state)\n//       }).then(function(response) {\n//         console.log(response)\n//         return response.json();\n//       });\n//     fetch('http://localhost:1337/professor', {\n//         method: 'GET'\n//       }).then(function(response) {\n//         console.log(\"aaaa\")\n//         console.log(response)\n//         test = response.json();\n//         // this.setState({professors: response.json()})\n//         return null;\n//       });\n//     event.preventDefault();\n// }\n//   render() {\n//     return (\n//       <div className=\"app\">\n//         <div class=\"row\">\n//           <div class=\"col-lg-2 col-md-0 col-sm-0 menu-bar align-items-end\">\n//             <Navigation />\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n//             <form onSubmit={this.handleSubmit}>\n//               <label>\n//                 Name: <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//                 Email: <input type=\"text\" value={this.state.value} name=\"email\" onChange={this.handleChange} /> <br></br>\n//                 Courses Assigned (separated by semicolons, only one space in each course name between the department name and the course code e.g.: \"COSI 011A\", uppercase letters only): <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//                 Blocks Available (separated by semicolons, no spaces, uppercase letters only): <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//                 Assigned Blocks: <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//               </label>\n//               <input type=\"submit\" value=\"Submit\" />\n//             </form>\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n//             Current list of teachers goes here\n//             <br></br>\n//             {/* {test.map(element => <div>{element}</div>)} */}\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// const TeacherUploader = () => {\n//     return (\n//       <div className=\"app\">\n//         <div class=\"row\">\n//           <div class=\"col-lg-2 col-md-0 col-sm-0 menu-bar align-items-end\">\n//             <Navigation />\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n//             <form onSubmit={this.handleSubmit}>\n//               <label>\n//                 Name: <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} />\n//               </label>\n//               <input type=\"submit\" value=\"Submit\" />\n//             </form>\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n\n\nexport default TeacherUploader;","map":{"version":3,"sources":["/home/festrella/Documents/web/course-scheduling/frontend/src/TeacherUploader.js"],"names":["React","Navigation","useState","useEffect","Link","TeacherUploader","name","setName","email","setEmail","professors","setProfessors","fetch","then","response","json","data","handleSubmit","event","alert","method","body","JSON","stringify","console","log","preventDefault","SideButton","props","handleClick","document","querySelectorAll","forEach","button","classList","remove","getElementById","add","link","e","target","value","map","professor"],"mappings":"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","sourcesContent":["import React from 'react';\n// import './Admin.css';\nimport Navigation from './Navigation.js';\nimport { useState, useEffect } from 'react';\n\nimport { Link } from 'react-router-dom';\n\n/**\n * TeacherUploader page to view and send responese\n */\n\nfunction TeacherUploader()  {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [professors, setProfessors] = useState([])\n\n  useEffect(() => {\n    fetch('http://localhost:1337/professor'\n    ).then(response=>response.json()\n    ).then(data=>{ \n      setProfessors(data)\n    });\n  });\n\n  const handleSubmit = (event) => {\n    alert('Professor ' + name + ' was submitted');\n\n    fetch('http://localhost:1337/professor', {\n        method: 'POST',\n        // We convert the React state to JSON and send it as the POST body\n        body: JSON.stringify({name: name, email: email})\n      }).then(function(response) {\n        // return response.json();\n      });\n\n    fetch('http://localhost:1337/professor'\n      ).then(response=>response.json()\n      ).then(data=>{ \n        setProfessors(data)\n        console.log(data)\n      }\n      );\n\n    event.preventDefault();\n  }\n\n  function SideButton(props) {\n\n    function handleClick(props) {\n      console.log(\"aaa\");\n      document.querySelectorAll('.sidebar-button').forEach(button => {\n        button.classList.remove('button-clicked');\n      });\n      document.getElementById(props.name).classList.add('button-clicked');\n    }\n\n    return (\n      //TODO link causes the buttons to not highlight\n      <Link to={props.link}>\n        <button id={props.name} class=\"btn-light sidebar-button\" onClick={() => handleClick(props)}>\n          {props.name}\n        </button>\n      </Link>\n    );\n  }\n\n    return (\n      <div className=\"app\">\n        <div class=\"row\">\n          <div class=\"col-lg-2 col-md-0 col-sm-0 menu-bar align-items-end\">\n          <div>\n            <h3><SideButton name=\"Course Scheduling Platform\" link=\"/\"/> <div /></h3>\n              <SideButton name=\"Academic Info\" /> <div />\n              <SideButton name=\"Teacher Info Uploading\" link=\"/teacher-uploader\" />\n              <SideButton name=\"Teacher's Requirements\" /> <div />\n              <SideButton name=\"Teacher Reminder\" link=\"/teacher-reminder\" />\n              <SideButton name=\"Manual Scheduling\" link=\"/scheduling\"/> <div />\n              <SideButton name=\"Automatic Scheduling\" /> <div />\n              <SideButton name=\"About\" /> <div />\n            </div>\n          </div>\n          <div class=\"col-lg-5 col-md-6 col-sm-6\">\n            <form onSubmit={handleSubmit}>\n              <label>\n                Name: <input type=\"text\" value={name} name=\"name\" onChange={e => setName(e.target.value)} /> <br></br>\n                Email: <input type=\"text\" value={email} name=\"email\" onChange={e => setEmail(e.target.value)} /> <br></br>\n                Courses Assigned (separated by semicolons, only one space in each course name between the department name and the course code e.g.: \"COSI 011A\", uppercase letters only): <input type=\"text\" value={''} name=\"name\"  /> <br></br>\n                Blocks Available (separated by semicolons, no spaces, uppercase letters only): <input type=\"text\" value={''} name=\"name\" /> <br></br>\n                Assigned Blocks: <input type=\"text\" value={''} name=\"name\"  /> <br></br>\n              </label>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n          </div>\n          <div class=\"col-lg-5 col-md-6 col-sm-6\">\n            Current list of teachers goes here\n            <br></br>\n            {professors.map(professor => <div>Name: {professor.name}, Email: {professor.email}</div>)}\n          </div>\n        </div>\n      </div>\n    )\n}\n// class TeacherUploader extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     test = {};\n//     this.state = { name: '', email: '', professors: {}};\n//   }\n\n//   handleChange = (event) => {\n//     this.setState({[event.target.name]: event.target.value});\n//   }\n\n//   handleSubmit = (event) => {\n//     alert('Professor ' + this.state.name + ' was submitted');\n\n//     fetch('http://localhost:1337/professor', {\n//         method: 'POST',\n//         // We convert the React state to JSON and send it as the POST body\n//         body: JSON.stringify(this.state)\n//       }).then(function(response) {\n//         console.log(response)\n//         return response.json();\n//       });\n\n//     fetch('http://localhost:1337/professor', {\n//         method: 'GET'\n//       }).then(function(response) {\n//         console.log(\"aaaa\")\n//         console.log(response)\n//         test = response.json();\n//         // this.setState({professors: response.json()})\n//         return null;\n//       });\n\n//     event.preventDefault();\n// }\n\n//   render() {\n//     return (\n//       <div className=\"app\">\n//         <div class=\"row\">\n//           <div class=\"col-lg-2 col-md-0 col-sm-0 menu-bar align-items-end\">\n//             <Navigation />\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n//             <form onSubmit={this.handleSubmit}>\n//               <label>\n//                 Name: <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//                 Email: <input type=\"text\" value={this.state.value} name=\"email\" onChange={this.handleChange} /> <br></br>\n//                 Courses Assigned (separated by semicolons, only one space in each course name between the department name and the course code e.g.: \"COSI 011A\", uppercase letters only): <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//                 Blocks Available (separated by semicolons, no spaces, uppercase letters only): <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//                 Assigned Blocks: <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} /> <br></br>\n//               </label>\n//               <input type=\"submit\" value=\"Submit\" />\n//             </form>\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n//             Current list of teachers goes here\n//             <br></br>\n//             {/* {test.map(element => <div>{element}</div>)} */}\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// const TeacherUploader = () => {\n//     return (\n//       <div className=\"app\">\n//         <div class=\"row\">\n//           <div class=\"col-lg-2 col-md-0 col-sm-0 menu-bar align-items-end\">\n//             <Navigation />\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n//             <form onSubmit={this.handleSubmit}>\n//               <label>\n//                 Name: <input type=\"text\" value={this.state.value} name=\"name\" onChange={this.handleChange} />\n//               </label>\n//               <input type=\"submit\" value=\"Submit\" />\n//             </form>\n//           </div>\n//           <div class=\"col-lg-5 col-md-6 col-sm-6\">\n            \n//           </div>\n//         </div>\n//       </div>\n//     );\n//   }\nexport default TeacherUploader;"]},"metadata":{},"sourceType":"module"}