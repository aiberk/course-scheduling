{"ast":null,"code":"var _jsxFileName = \"/home/festrella/Documents/web/course-scheduling/frontend/src/Row.js\";\nimport React from 'react';\nimport 'child_process'; // replace ^ if using ES modules\n\nclass Row extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeState = (id, event) => {\n      if (this.state.status == \"table-success\") {\n        this.setState({\n          status: \"table-danger\"\n        });\n        fetch('http://localhost:1337/professor/' + id, {\n          method: 'PATCH',\n          body: JSON.stringify({\n            hasResponded: \"false\"\n          })\n        });\n      } else {\n        this.setState({\n          status: \"table-success\"\n        });\n        fetch('http://localhost:1337/professor/' + id, {\n          method: 'PATCH',\n          body: JSON.stringify({\n            hasResponded: \"true\"\n          })\n        });\n      }\n    };\n\n    console.log(this);\n    this.state = {\n      status: props.status,\n      name: props.name,\n      email: props.email,\n      id: props.id\n    };\n  }\n\n  click() {\n    console.log(\"This is where the shell command used to send emails will be executed\");\n\n    const _require = require(\"child_process\"),\n          exec = _require.exec; // exec(\"ls -la\", (error, stdout, stderr)); \n    // \"echo \"When would you like to teach?\" | mail -s \"Pick your course time\" -S \"from=donotreply@cs.brandeis.edu\" pollack@brandeis.edu\"\n\n  }\n\n  render() {\n    return React.createElement(\"tr\", {\n      class: this.state.status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.state.email), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.status == \"table-success\" ? \"Has Responded\" : this.state.status != \"table-danger\" ? \"\" : \"Has Not Responded Yet\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.click,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Send Reminder to Respond\"), React.createElement(\"button\", {\n      onClick: this.changeState.bind(this, this.state.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Toggle Response Status\")));\n  }\n\n}\n\nexport default Row;","map":{"version":3,"sources":["/home/festrella/Documents/web/course-scheduling/frontend/src/Row.js"],"names":["React","Row","Component","constructor","props","changeState","id","event","state","status","setState","fetch","method","body","JSON","stringify","hasResponded","console","log","name","email","click","require","exec","render","bind"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP,C,CAAyB;;AAGzB,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAiC;AAEjCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAoBlBC,WApBkB,GAoBJ,CAACC,EAAD,EAAKC,KAAL,KAAe;AACzB,UAAG,KAAKC,KAAL,CAAWC,MAAX,IAAqB,eAAxB,EAAwC;AACxC,aAAKC,QAAL,CAAc;AAACD,UAAAA,MAAM,EAAE;AAAT,SAAd;AACAE,QAAAA,KAAK,CAAC,qCAAqCL,EAAtC,EAA0C;AAC3CM,UAAAA,MAAM,EAAE,OADmC;AAE3CC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,YAAAA,YAAY,EAAE;AAAf,WAAf;AAFqC,SAA1C,CAAL;AAIC,OAND,MAMK;AACL,aAAKN,QAAL,CAAc;AAACD,UAAAA,MAAM,EAAE;AAAT,SAAd;AACAE,QAAAA,KAAK,CAAC,qCAAqCL,EAAtC,EAA0C;AAC3CM,UAAAA,MAAM,EAAE,OADmC;AAE3CC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,YAAAA,YAAY,EAAE;AAAf,WAAf;AAFqC,SAA1C,CAAL;AAIC;AACJ,KAlCiB;;AAEdC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,SAAKV,KAAL,GAAa;AACbC,MAAAA,MAAM,EAAEL,KAAK,CAACK,MADD;AAEbU,MAAAA,IAAI,EAAEf,KAAK,CAACe,IAFC;AAGbC,MAAAA,KAAK,EAAEhB,KAAK,CAACgB,KAHA;AAIbd,MAAAA,EAAE,EAAEF,KAAK,CAACE;AAJG,KAAb;AAMH;;AAEDe,EAAAA,KAAK,GAAE;AACHJ,IAAAA,OAAO,CAACC,GAAR,CAAY,sEAAZ;;AADG,qBAEcI,OAAO,CAAC,eAAD,CAFrB;AAAA,UAEKC,IAFL,YAEKA,IAFL,EAGH;AAGA;;AACH;;AAmBDC,EAAAA,MAAM,GAAE;AACJ,WACA;AAAI,MAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiB,KAAKD,KAAL,CAAWW,IAA5B,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKX,KAAL,CAAWY,KAAhB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,KAAKZ,KAAL,CAAWC,MAAX,IAAqB,eAArB,GAAuC,eAAvC,GACD,KAAKD,KAAL,CAAWC,MAAX,IAAqB,cAArB,GAAsC,EAAtC,GAA0C,uBAF1C,CAHJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,OAAO,EAAE,KAAKY,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADA,EAGA;AAAQ,MAAA,OAAO,EAAE,KAAKhB,WAAL,CAAiBoB,IAAjB,CAAsB,IAAtB,EAA4B,KAAKjB,KAAL,CAAWF,EAAvC,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHA,CAPJ,CADA;AAeH;;AAvDgC;;AA0D/B,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport 'child_process';  // replace ^ if using ES modules\n\n\nclass Row extends React.Component{\n\nconstructor(props){\n    super(props);\n    console.log(this)\n    this.state = {\n    status: props.status,\n    name: props.name,\n    email: props.email,\n    id: props.id\n    };\n}\n\nclick(){\n    console.log(\"This is where the shell command used to send emails will be executed\");\n    const { exec } = require(\"child_process\");\n    // exec(\"ls -la\", (error, stdout, stderr)); \n    \n\n    // \"echo \"When would you like to teach?\" | mail -s \"Pick your course time\" -S \"from=donotreply@cs.brandeis.edu\" pollack@brandeis.edu\"\n}\n\nchangeState = (id, event) => {\n    if(this.state.status == \"table-success\"){\n    this.setState({status: \"table-danger\"})\n    fetch('http://localhost:1337/professor/' + id, {\n        method: 'PATCH',\n        body: JSON.stringify({hasResponded: \"false\"})\n    });\n    }else{\n    this.setState({status: \"table-success\"})\n    fetch('http://localhost:1337/professor/' + id, {\n        method: 'PATCH',\n        body: JSON.stringify({hasResponded: \"true\"})\n    });\n    }\n}\n\n\nrender(){\n    return(\n    <tr class={this.state.status}>\n        <th scope=\"row\">{this.state.name}</th>\n        <td>{this.state.email}</td>\n        <td>\n        {this.state.status == \"table-success\" ? \"Has Responded\" :\n        this.state.status != \"table-danger\" ? \"\": \"Has Not Responded Yet\"}\n        </td>\n        <td>\n        <button onClick={this.click}>Send Reminder to Respond</button>\n        {/* <button onClick={this.changeState.bind(this, this.state.id)}>Toggle Response Status</button> */}\n        <button onClick={this.changeState.bind(this, this.state.id)}>Toggle Response Status</button>\n        </td>\n    </tr>\n    )\n}\n}\n\n  export default Row;"]},"metadata":{},"sourceType":"module"}